openapi: 3.0.0
paths:
  /healthz:
    get:
      operationId: HealthzController_checkHealth
      summary: Executes Health Check
      description: >-
        Runs a health check on the service and its dependencies, including
        upstream services
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
      tags:
        - Health Check
  /healthz/self:
    get:
      operationId: HealthzController_checkSelfHealth
      summary: Executes Self Health Check
      description: >-
        Runs a health check on the service and its core dependencies, exclusing
        upstream services
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
      tags:
        - Health Check
  /events/{aggregateId}:
    get:
      operationId: AggregateEventsController_getByAggregateId
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AggregateEvent'
      tags:
        - Events
  /v1/auth/sign-up:
    post:
      operationId: SignUpController_execute
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpOutput'
      tags:
        - Auth
  /v1/auth/sign-in:
    post:
      operationId: SignInController_execute
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInOutput'
      tags:
        - Auth
  /v1/auth/verify:
    post:
      operationId: VerifyTokenController_execute
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTokenInput'
      responses:
        '200':
          description: ''
        '401':
          description: ''
      tags:
        - Auth
info:
  title: FiapXIdentity
  description: API Component for Fiap X
  version: v1.0.0-development
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
    description: development
components:
  schemas:
    AggregateEvent:
      type: object
      properties:
        id:
          type: string
        aggregateId:
          type: string
        eventName:
          type: string
        timestamp:
          format: date-time
          type: string
        version:
          type: number
        data:
          type: object
          description: The internal domain event structure
      required:
        - id
        - aggregateId
        - eventName
        - timestamp
        - version
        - data
    SignUpInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    SignUpOutput:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    SignInInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    SignInOutput:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    VerifyTokenInput:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
externalDocs:
  description: Export Specs
  url: /docs-json
